// Generated by delombok at Thu Mar 16 15:46:21 EDT 2023
/*
 * Table Wrapper API
 * Copyright (C) 2022  Spacious Team <spacious-team@ya.ru>
 *
 * This program is free software: you can redistribute it and/or modify
 * it under the terms of the GNU Affero General Public License as
 * published by the Free Software Foundation, either version 3 of the
 * License, or (at your option) any later version.
 *
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU Affero General Public License for more details.
 *
 * You should have received a copy of the GNU Affero General Public License
 * along with this program.  If not, see <https://www.gnu.org/licenses/>.
 */
package org.spacious_team.table_wrapper.api;

import org.checkerframework.checker.nullness.qual.Nullable;
import java.math.BigDecimal;
import java.time.Instant;
import java.time.LocalDateTime;

@org.checkerframework.framework.qual.AnnotatedFor("org.checkerframework.checker.nullness.NullnessChecker")
public class EmptyTableCell implements TableCell {

    private final int columnIndex;

    @org.checkerframework.dataflow.qual.Pure
    public @org.checkerframework.checker.initialization.qual.FBCBottom @org.checkerframework.checker.nullness.qual.Nullable Object getValue(@org.checkerframework.checker.initialization.qual.Initialized @org.checkerframework.checker.nullness.qual.NonNull EmptyTableCell this) {
        return null;
    }

    @org.checkerframework.dataflow.qual.Pure
    public int getIntValue(@org.checkerframework.checker.initialization.qual.Initialized @org.checkerframework.checker.nullness.qual.NonNull EmptyTableCell this) {
        throw new NullPointerException("Can\'t get int value");
    }

    @org.checkerframework.dataflow.qual.Pure
    public long getLongValue(@org.checkerframework.checker.initialization.qual.Initialized @org.checkerframework.checker.nullness.qual.NonNull EmptyTableCell this) {
        throw new NullPointerException("Can\'t get long value");
    }

    @org.checkerframework.dataflow.qual.Pure
    public Double getDoubleValue(@org.checkerframework.checker.initialization.qual.Initialized @org.checkerframework.checker.nullness.qual.NonNull EmptyTableCell this) {
        throw new NullPointerException("Can\'t get double value");
    }

    @org.checkerframework.dataflow.qual.Pure
    public BigDecimal getBigDecimalValue(@org.checkerframework.checker.initialization.qual.Initialized @org.checkerframework.checker.nullness.qual.NonNull EmptyTableCell this) {
        throw new NullPointerException("Can\'t get BigDecimal value");
    }

    @org.checkerframework.dataflow.qual.Pure
    public String getStringValue(@org.checkerframework.checker.initialization.qual.Initialized @org.checkerframework.checker.nullness.qual.NonNull EmptyTableCell this) {
        throw new NullPointerException("Can\'t get String value");
    }

    @org.checkerframework.dataflow.qual.Pure
    public Instant getInstantValue(@org.checkerframework.checker.initialization.qual.Initialized @org.checkerframework.checker.nullness.qual.NonNull EmptyTableCell this) {
        throw new NullPointerException("Can\'t get Instant value");
    }

    @org.checkerframework.dataflow.qual.Pure
    public LocalDateTime getLocalDateTimeValue(@org.checkerframework.checker.initialization.qual.Initialized @org.checkerframework.checker.nullness.qual.NonNull EmptyTableCell this) {
        throw new NullPointerException("Can\'t get LocalDateTime value");
    }

    @org.checkerframework.dataflow.qual.Pure
    public java.lang.String toString() {
        return "EmptyTableCell(columnIndex=" + this.getColumnIndex() + ")";
    }

    @org.checkerframework.dataflow.qual.Pure
    public boolean equals(final java.lang.Object o) {
        if (o == this)
            return true;
        if (!(o instanceof EmptyTableCell))
            return false;
        final EmptyTableCell other = (EmptyTableCell) o;
        if (!other.canEqual((java.lang.Object) this))
            return false;
        if (this.getColumnIndex() != other.getColumnIndex())
            return false;
        return true;
    }

    @org.checkerframework.dataflow.qual.Pure
    protected boolean canEqual(final java.lang.Object other) {
        return other instanceof EmptyTableCell;
    }

    @org.checkerframework.dataflow.qual.Pure
    public int hashCode() {
        final int PRIME = 59;
        int result = 1;
        result = result * PRIME + this.getColumnIndex();
        return result;
    }

    private EmptyTableCell(final int columnIndex) {
        this.columnIndex = columnIndex;
    }

    public static EmptyTableCell of(final int columnIndex) {
        return new EmptyTableCell(columnIndex);
    }

    @org.checkerframework.dataflow.qual.Pure
    public int getColumnIndex() {
        return this.columnIndex;
    }
}
